<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8" />
    <title>Pesquisa de todas as pessoas no sistema</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body { font-family: Arial, sans-serif; padding: 20px; }
        /* Scrollbar para navegadores WebKit */
::-webkit-scrollbar {
  width: 32px;
}

::-webkit-scrollbar-track {
  background: #eee;
  border-left:1px solid #111;
}

::-webkit-scrollbar-thumb {
  background-color: #555;
}

::-webkit-scrollbar-thumb:hover {
  background: #333;
}

/* Scrollbar para Firefox */
body {
  scrollbar-width: thin;
  scrollbar-color: #555 #eee;
}
        input[type="file"], input[type="text"] { margin-bottom: 10px; }
        ul { list-style-type: none; padding-left: 0; }
        li { padding: 5px 0; border-bottom: 1px solid #ccc; }
        #upload {
            display: none; /* Esconde o input padr√£o */
        }

        .upload-label {
            display: inline-block;
            background-color: #007bff;
            color: white;
            padding: 10px 15px;
            font-size: 16px;
            border-radius: 5px;
            cursor: pointer;
        }

        .upload-label:hover {
            background-color: #0056b3;
        }

        .search-input {
            width: 100%;
            max-width: 400px;
            padding: 10px 15px;
            font-size: 16px;
            border: 2px solid #ccc;
            border-radius: 25px;
            outline: none;
            transition: 0.3s;
            box-sizing: border-box;
        }

        .search-input:focus {
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0,123,255,0.4);
        }
        #department-filter {
            display: flex;
            flex-direction: column;
            margin-bottom: 15px;
            border-bottom: 1px solid #eee;
            padding-bottom: 10px;
        }
        #department-filter label {
            margin-left: 0;
            margin-right: 0;
        }
        .voltar-tela-inicial {
 display: flex;
  flex-direction: row;
    position: fixed;
  top: 0px;
  left: 0px;
right:0;
  display: flex;
  flex-direction: row;
  gap: 10px;
  z-index: 999;
  flex-wrap: wrap; /* Para permitir quebra de linha */
  background:#222;
  padding:10px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
  justify-content: center;
}


/* Estilo base compartilhado entre os bot√µes */
.voltar-tela-inicial button {
  width: 50px;
  height: 50px;
  background: #eee;
  border: 2px solid #000;
  font-size: 24px;
  cursor: pointer;
  border-radius: 50%;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
  display: flex;
  justify-content: center;
  align-items: center;
  color: black;
}
    </style>
</head>
<body>
<div class="voltar-tela-inicial">
   <button onclick="window.location.href='https://armandodecampos.github.io/Ferramentas---Ambev/'">
      <i class="fas fa-home"></i>
    </button>
</div>
<br>
<br>
<br>
<br>
    <h3>Pesquisa de todas as pessoas no sistema</h3>
    <input type="file" id="upload" accept=".xls,.xlsx" />
    <label for="upload" class="upload-label">Selecionar arquivo Excel</label>
    <p id="file-name" style="font-style: italic; color: #555;"></p>
    <br>
    <p id="count">Total de pessoas: 0</p>
    <div id="department-filter" style="margin-bottom: 15px; border-bottom: 1px solid #eee; padding-bottom: 10px;">
        <strong>Filtrar por Departamento:</strong><br>
        <label style="margin-bottom: 10px; cursor: pointer;">
            <input type="checkbox" id="toggle-all-checkboxes"> Marcar Todos/Desmarcar Todos
        </label>
    </div>
    <input type="search" id="search" placeholder="üîç Pesquisar..." class="search-input" />
    <button id="export-excel" style="padding: 10px 15px; font-size: 16px; border: none; border-radius: 5px; background-color: #28a745; color: white; cursor: pointer; margin-top: 20px;">Exportar para Excel</button>
    <ul id="list"></ul>
    <script>
        const uploadInput = document.getElementById('upload');
        const searchInput = document.getElementById('search');
        const list = document.getElementById('list');
        let allItems = [];
        let departmentCheckboxes = {};
        const departmentFilterDiv = document.getElementById('department-filter');
        const toggleAllCheckbox = document.getElementById('toggle-all-checkboxes');

        uploadInput.addEventListener('change', async (e) => {
            const file = e.target.files[0];
            document.getElementById('file-name').textContent = `üìÇ Arquivo selecionado: ${file.name}`;
            if (!file) return;

            const data = await file.arrayBuffer();
            const workbook = XLSX.read(data, { type: 'array' });
            const sheetName = workbook.SheetNames[0];
            const worksheet = workbook.Sheets[sheetName];
            const json = XLSX.utils.sheet_to_json(worksheet, { header: 1 });

            const departments = {};
            const originalDepartments = {};

            json.slice(2).forEach(row => {
                const id = row[0]; // Coluna A
                const nome = row[1] ? row[1].trim() : ""; // Coluna B
                const sobrenome = row[2] ? row[2].trim() : ""; // Coluna C
                const department = row[4] && row[4].trim() ? row[4].trim() : "Portaria Virtual"; // Coluna E

                if (!id || !nome || !sobrenome || !department) return;

                if (!departments[department]) {
                    departments[department] = new Set();
                    originalDepartments[department] = department;
                }

                const itemText = `${nome} ${sobrenome} - ID: ${id}`;
                departments[department].add(itemText);
            });

            const departmentsArray = {};
            for (const dept in departments) {
                departmentsArray[dept] = Array.from(departments[dept]);
            }

            allItems = departmentsArray;
            renderDepartmentFilters(originalDepartments);

            const toggleAllCheckboxElement = document.getElementById('toggle-all-checkboxes');
            if (toggleAllCheckboxElement && Object.keys(originalDepartments).length > 0) {
                toggleAllCheckboxElement.checked = true;
            }

            filterAndRenderList();
        });

        searchInput.addEventListener('input', () => {
            filterAndRenderList();
        });

        function renderList(items) {
            list.innerHTML = '';
            items.forEach(item => {
                const li = document.createElement('li');
                li.textContent = item;
                list.appendChild(li);
            });

            document.getElementById('count').textContent = `Total de pessoas: ${items.length}`;
        }

        function renderGroupedList(groups) {
            list.innerHTML = '';
            let total = 0;

            Object.keys(groups).sort().forEach(dept => {
                const deptHeader = document.createElement('li');
                deptHeader.innerHTML = `<strong>${dept}</strong>`;
                deptHeader.style.marginTop = '15px';
                list.appendChild(deptHeader);

                groups[dept].forEach(item => {
                    const li = document.createElement('li');
                    li.textContent = item;
                    list.appendChild(li);
                    total++;
                });
            });

            document.getElementById('count').textContent = `Total de pessoas: ${total}`;
        }

        function renderDepartmentFilters(depts) {
            departmentFilterDiv.innerHTML = ''; // Limpa o conte√∫do da div

            const toggleAllLabel = document.createElement('label');
            const toggleCheckbox = document.createElement('input');
            toggleCheckbox.type = 'checkbox';
            toggleCheckbox.id = 'toggle-all-checkboxes';
            toggleAllLabel.appendChild(toggleCheckbox);
            toggleAllLabel.appendChild(document.createTextNode(' Marcar Todos/Desmarcar Todos'));
            toggleAllLabel.style.marginBottom = '10px';
            toggleAllLabel.style.cursor = 'pointer';
            departmentFilterDiv.appendChild(toggleAllLabel);

            toggleCheckbox.addEventListener('change', toggleAllDepartments);

            departmentCheckboxes = {};

            Object.keys(depts).sort().forEach(dept => {
                const count = allItems[dept] ? allItems[dept].length : 0;
                const checkbox = document.createElement('input');
                checkbox.type = 'checkbox';
                checkbox.id = `dept-${dept.replace(/\s+/g, '-')}`;
                checkbox.value = dept;
                checkbox.checked = true;
                checkbox.addEventListener('change', filterAndRenderList);

                const label = document.createElement('label');
                label.htmlFor = checkbox.id;
                label.textContent = `${dept} (${count})`;
                label.style.marginLeft = '0px';
                label.style.marginRight = '0px';

                const div = document.createElement('div');
                div.appendChild(checkbox);
                div.appendChild(label);
                departmentFilterDiv.appendChild(div);
                departmentCheckboxes[checkbox.id] = dept;
            });
        }

        function toggleAllDepartments() {
            const shouldCheck = this.checked;
            Object.keys(departmentCheckboxes).forEach(checkboxId => {
                const checkbox = document.getElementById(checkboxId);
                if (checkbox) {
                    checkbox.checked = shouldCheck;
                }
            });
            filterAndRenderList();
        }

        function filterAndRenderList() {
            const search = searchInput.value.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "");
            const searchWords = search.split(/\s+/).filter(Boolean);
            const visibleDepartments = new Set();

            Object.keys(departmentCheckboxes).forEach(checkboxId => {
                if (document.getElementById(checkboxId).checked) {
                    visibleDepartments.add(departmentCheckboxes[checkboxId]);
                }
            });

            const filteredGroups = {};

            Object.keys(allItems).forEach(dept => {
                if (visibleDepartments.has(dept)) {
                    const filtered = allItems[dept].filter(item => {
                        const itemWords = item.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "");
                        return searchWords.every(word => itemWords.includes(word));
                    });

                    if (filtered.length > 0) {
                        filteredGroups[dept] = filtered;
                    }
                }
            });

            renderGroupedList(filteredGroups);
        }

        // bot√£o para gerar o arquivo excel e baixar
        const exportExcelBtn = document.getElementById('export-excel');

        exportExcelBtn.addEventListener('click', () => {
            const workbook = XLSX.utils.book_new();
            const visibleDepartments = new Set();

            Object.keys(departmentCheckboxes).forEach(checkboxId => {
                if (document.getElementById(checkboxId).checked) {
                    visibleDepartments.add(departmentCheckboxes[checkboxId]);
                }
            });

            Object.keys(allItems).forEach(dept => {
                if (visibleDepartments.has(dept)) {
                    const deptData = [[dept]];
                    allItems[dept].forEach(item => {
                        deptData.push([item]);
                    });
                    const worksheet = XLSX.utils.aoa_to_sheet(deptData);
                    XLSX.utils.book_append_sheet(workbook, worksheet, dept);
                }
            });
            XLSX.writeFile(workbook, 'lista_por_departamento.xlsx');
        });
    </script>

</body>
</html>
