<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <title>Pesquisa de pessoas</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
  <style>
    body { font-family: Arial, sans-serif; padding: 20px; }
    input[type="file"], input[type="text"] { margin-bottom: 10px; }
    ul { list-style-type: none; padding-left: 0; }
    li { padding: 5px 0; border-bottom: 1px solid #ccc; }
     #upload {
    display: none; /* Esconde o input padr√£o */
  }

  .upload-label {
    display: inline-block;
    background-color: #007bff;
    color: white;
    padding: 10px 15px;
    font-size: 16px;
    border-radius: 5px;
    cursor: pointer;
  }

  .upload-label:hover {
    background-color: #0056b3;
  }
  
  .search-input {
  width: 100%;
  max-width: 400px;
  padding: 10px 15px;
  font-size: 16px;
  border: 2px solid #ccc;
  border-radius: 25px;
  outline: none;
  transition: 0.3s;
  box-sizing: border-box;
}

.search-input:focus {
  border-color: #007bff;
  box-shadow: 0 0 5px rgba(0,123,255,0.4);
}
  </style>
</head>
<body>

  <h3>Pesquisa de pessoas</h3>
  <input type="file" id="upload" accept=".xls,.xlsx" />
  <label for="upload" class="upload-label">Selecionar arquivo Excel</label>
  <p id="file-name" style="font-style: italic; color: #555;"></p>
  <br>
  <p id="count">Total de pessoas: 0</p>
<input type="search" id="search" placeholder="üîç Pesquisar..." class="search-input" />
  <ul id="list"></ul>

  <script>
    const uploadInput = document.getElementById('upload');
    const searchInput = document.getElementById('search');
    const list = document.getElementById('list');
    let allItems = [];

    uploadInput.addEventListener('change', async (e) => {
  const file = e.target.files[0];
  document.getElementById('file-name').textContent = `üìÇ Arquivo selecionado: ${file.name}`;
  if (!file) return;

  const data = await file.arrayBuffer();
  const workbook = XLSX.read(data, { type: 'array' });
  const sheetName = workbook.SheetNames[0];
  const worksheet = workbook.Sheets[sheetName];
  const json = XLSX.utils.sheet_to_json(worksheet, { header: 1 });

  const seen = new Set();
  const departments = {};

  json.slice(2).forEach(row => {
    const uniqueKey = row[6]; // Coluna G
    const department = row[11] && row[11].trim() ? row[11].trim() : "Portaria Virtual"; // Coluna L

    if (!uniqueKey || !department || seen.has(uniqueKey)) return;

    seen.add(uniqueKey);

    if (!departments[department]) {
      departments[department] = [];
    }

    const nome = row[7] || "";       // Coluna H
const rg = row[6] || "";         // Coluna G
const sobrenome = row[8] || "";  // Coluna I

const itemText = `${nome} ${sobrenome} - ${rg}`;
departments[department].push(itemText);

  });

  allItems = departments;
  renderGroupedList(departments);
});


    searchInput.addEventListener('input', () => {
  const search = searchInput.value.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "");
  const searchWords = search.split(/\s+/).filter(Boolean);

  const filteredGroups = {};

  Object.keys(allItems).forEach(dept => {
    const filtered = allItems[dept].filter(item => {
      const itemWords = item.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "");
      return searchWords.every(word => itemWords.includes(word));
    });

    if (filtered.length > 0) {
      filteredGroups[dept] = filtered;
    }
  });

  renderGroupedList(filteredGroups);
});



    function renderList(items) {
      list.innerHTML = '';
      items.forEach(item => {
        const li = document.createElement('li');
        li.textContent = item;
        list.appendChild(li);
      });
    }
    
    function renderList(items) {
  list.innerHTML = '';
  items.forEach(item => {
    const li = document.createElement('li');
    li.textContent = item;
    list.appendChild(li);
  });

  document.getElementById('count').textContent = `Total de pessoas: ${items.length}`;
}

function renderGroupedList(groups) {
  list.innerHTML = '';
  let total = 0;

  Object.keys(groups).sort().forEach(dept => {
    const deptHeader = document.createElement('li');
    deptHeader.innerHTML = `<strong>${dept}</strong>`;
    deptHeader.style.marginTop = '15px';
    list.appendChild(deptHeader);

    groups[dept].forEach(item => {
      const li = document.createElement('li');
      li.textContent = item;
      list.appendChild(li);
      total++;
    });
  });

  document.getElementById('count').textContent = `Total de pessoas: ${total}`;
}

  </script>

</body>
</html>
